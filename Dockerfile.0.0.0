FROM bioconductor/bioconductor_docker:RELEASE_3_10

MAINTAINER Jonas Schulte-Schrepping

# This will make apt-get install without question
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
    apt-get install -y apt-utils \
    	    	       libudunits2-dev \
		       libhdf5-dev \
		       libgdal-dev \
		       gdal-bin \
		       proj-bin \
		       libproj-dev \
		       libgsl-dev \
		       libxml2 \
		       libxml2-dev \
		       libigraph0-dev \
		       zlib1g-dev \
		       libtool \
		       bison \
		       flex \
		       automake \
		       autoconf \
		       libpng*-dev \
		       libglpk-dev \
		       xorg \
		       libx11-dev \
		       libglu1-mesa-dev \
		       libfreetype*-dev \
		       p7zip \
		       build-essential \
		       libssl-dev \
		       libffi-dev \
		       libxslt1-dev \
		       python3 \
		       python-dev \
		       python3-dev \
		       python3-pip \
		       libxt-dev \
		       libgtk2.0-dev \
		       libcairo2-dev \
		       xvfb \
		       xauth \
		       xfonts-base

# update pip
RUN pip install --upgrade pip
RUN pip3 install --upgrade pip

# install wheel
RUN pip install wheel

# install umap-learn
RUN pip3 install numpy==1.19.1
RUN pip3 install scipy==1.5.2
RUN pip3 install python-igraph==0.8.2

RUN pip install jupyterlab==2.2.8
## https://github.com/jupyterlab/jupyterlab-toc

## x means 12 here
RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash -
RUN apt-get install -y nodejs

RUN jupyter labextension install @jupyterlab/toc


## Set a default user. Available via runtime flag `--user docker`
## Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library
## User should also have & own a home directory (for rstudio or linked volumes to work properly).
RUN useradd --create-home --shell /bin/bash docker \
        #&& mkdir /home/docker \
        && chown docker:docker /home/docker \
        && addgroup docker staff
#https://stackoverflow.com/questions/27701930/how-to-add-users-to-docker-container
RUN echo 'docker:docker4bix' | chpasswd


WORKDIR /home/docker/
USER docker
RUN wget \
    https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && mkdir /home/docker/.conda \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh
ENV PATH=${PATH}:/home/docker/miniconda3/bin/:
RUN conda --version
RUN . /home/docker/miniconda3/etc/profile.d/conda.sh  && conda activate base && \
    conda install -y -c conda-forge mamba==0.5.1

RUN conda config --add channels defaults && conda config --add channels bioconda && conda config --add channels conda-forge &&  mamba install -y  mageck-vispr==0.5.4 
#RUN mamba install -c bioconda bioconductor-mageckflute==1.4.2
#RUN mamba install -c r r-stringi==1.4.3
#RUN mamba install -c bioconda bioconductor-org.hs.eg.db==3.7.0
RUN mamba install -c conda-forge ipykernel==5.3.4
RUN ipython kernel install --user --name=mageck

RUN . /home/docker/miniconda3/etc/profile.d/conda.sh  &&  conda deactivate 
RUN conda config --set auto_activate_base false

RUN which R
RUN R -e 'install.packages("knitr", repos="http://cran.us.r-project.org")'
RUN R -e 'install.packages("devtools", repos="http://cran.us.r-project.org")'
RUN R -e 'install.packages("pkgbuild", repos="http://cran.us.r-project.org")'

#RUN R -e 'devtools::install_version("org.Hs.eg.db", version="3.7.0", repos="https://bioconductor.org/packages/3.10/data/annotation",upgrade = "never", force = TRUE)'
RUN R -e 'devtools::install_version("org.Hs.eg.db", version="3.7.0", repos="https://bioconductor.org/packages/3.10/data/annotation",upgrade = "never", force = TRUE)'

USER root
#RUN R -e 'IRkernel::installspec(name = "R-mageck", displayname = "R-mageck", user = FALSE)'
USER docker
#RUN mageck -h


